{
    "hash": "mGRMphZeug",
    "writeHash": "XK0S4HEWlpJ5RUD",
    "versionDate": "2020-04-17T04:04:09.000Z",
    "files": {
        "unnamed1.pddl": "",
        "dungeon-domain.pddl": "(define (domain dungeon)\n\n;;(:requirements :strips :typing :conditional-effects :negative-preconditions :equality)\n\n(:types\n    hero\n    sword\n    monster\n    trap\n    room\n)\n\n(:predicates\n\n    (hero-in-room ?h - hero ?r - room) ; is the hero in room ?\n    (hero-empty-handed ?h - hero) ; is the hero empty-handed ? i.e. does he not have a sword ?\n    (hero-alive ?h - hero) ; is the hero alive ?\n\n    (sword-in-room ?s - sword ?r - room) ; is there a sword in room ?\n    (sword-destroyed ?s - sword) ; has the sword been destroyed ?\n    (sword-holding ?h - hero ?x - sword) ; is the hero holding the sword ?\n\n    (monster-in-room ?m - monster ?r - room) ; is there a monster in room ?\n    (monster-afraid ?h - hero ?m - monster) ; is monster afraid of hero ? (yes if hero holds a sword)\n\n    (trap-in-room ?t - trap ?r - room) ; is there a trap in the room ?\n    (trap-armed ?t - trap ?r - room) ; is the trap armed ?\n    (trap-disarmed ?t - trap ?r - room) ; is the trap disarmed ?\n\n    (room-destroyed ?r - room) ; is the room destroyed ?\n    (room-cleared ?h - hero ?r - room) ; has the room being cleared ? (i.e. no monsters, all traps disarmed)\n    (room-corridor ?c ?r - room) ; is there a corridor to an adjacent room ?\n\n)\n\n;; Hero actions\n\n(:action move\n    :parameters (?h - hero ?from - room ?to - room)\n    :precondition (and\n        (not (room-destroyed ?to)) \n        (hero-in-room ?h ?from)\n        (hero-alive ?h)\n        (room-corridor ?from ?to)\n        (room-cleared ?h ?from)\n    )\n    :effect (and \n        (hero-alive ?h)\n        (hero-in-room ?h ?to)\n        (not (hero-in-room ?h ?from))\n        (room-destroyed ?from)\n    )\n)\n\n(:action pickup-sword\n    :parameters (?r - room ?h - hero ?s - sword)\n    :precondition (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (hero-empty-handed ?h)\n        (sword-in-room ?s ?r)\n        (not ( sword-holding ?h ?s))\n    )\n    :effect (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (not (hero-empty-handed ?h))\n        (not ( sword-in-room ?s ?r ))\n        (not ( sword-destroyed ?s ))\n        (sword-holding ?h ?s)\n        (room-cleared ?h ?r)\n    )\n)\n\n(:action destroy-sword\n    :parameters (?h - hero ?s - sword)\n    :precondition (and\n        (hero-alive ?h)\n        (sword-holding ?h ?s)\n    )\n    :effect (and\n        (hero-alive ?h)\n        (sword-destroyed ?s)\n        (hero-empty-handed ?h )\n    )\n)\n\n(:action disarm-trap\n    :parameters (?h - hero ?r - room ?t - trap)\n    :precondition (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (hero-empty-handed ?h)\n        (trap-in-room ?t ?r)\n        (trap-armed ?t ?r)\n        (not (trap-disarmed ?t ?r))\n    )\n    :effect (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (hero-empty-handed ?h)\n        (trap-in-room ?t ?r)\n        (not (trap-armed ?t ?r))\n        (trap-disarmed ?t ?r)\n        (room-cleared ?h ?r)\n    )\n)\n\n(:action face-monster\n    :parameters (?h - hero ?s - sword ?r - room ?m - monster)\n    :precondition (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (sword-holding ?h ?s)\n        (monster-in-room ?m ?r)\n        (not (monster-afraid ?h ?m))\n    )\n    :effect (and\n        (hero-alive ?h)\n        (hero-in-room ?h ?r)\n        (sword-holding ?h ?s)\n        (monster-in-room ?m ?r)\n        (monster-afraid ?h ?m)\n        (room-cleared ?h ?r)\n    )\n)\n\n)\n",
        "problem1.pddl": "(define (problem pb1) (:domain dungeon)\n(:objects\n    player - hero\n    m0 m1 - monster\n    t0 - trap\n    s0 - sword\n    r0 r1 r2 r3 r4 r5 r6 r7 - room\n)\n\n(:init\n    (hero-alive player)\n    (hero-in-room player r0)\n    (hero-empty-handed player)\n    \n    (monster-in-room m0 r2)\n    (not (monster-afraid player m0))\n    (monster-in-room m1 r3)\n    (not (monster-afraid player m1))\n\n    (trap-in-room t0 r5)\n    (trap-armed t0 r5)\n    (not (trap-disarmed t0 r5))\n\n    (sword-in-room s0 r1)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n\n    (not (room-destroyed r0))\n    (not (room-destroyed r1))\n    (not (room-destroyed r2))\n    (not (room-destroyed r3))\n    (not (room-destroyed r4))\n    (not (room-destroyed r5))\n    (not (room-destroyed r6))\n    (not (room-destroyed r7))\n\n    (room-cleared player r0)\n    (not (room-cleared player r1))\n    (not (room-cleared player r2))\n    (not (room-cleared player r3))\n    (room-cleared player r4)\n    (not (room-cleared player r5))\n    (room-cleared player r6)\n    (not (room-cleared player r7))\n\n    (room-corridor r0 r1)\n    (room-corridor r0 r2)\n    (room-corridor r1 r0)\n    (room-corridor r1 r2)\n    (room-corridor r1 r3)\n    (room-corridor r2 r0)\n    (room-corridor r2 r1)\n    (room-corridor r2 r4)\n    (room-corridor r3 r1)\n    (room-corridor r3 r4)\n    (room-corridor r3 r5)\n    (room-corridor r4 r2)\n    (room-corridor r4 r3)\n    (room-corridor r4 r7)\n    (room-corridor r5 r3)\n    (room-corridor r5 r6)\n    (room-corridor r5 r7)\n    (room-corridor r6 r4)\n    (room-corridor r6 r5)\n    (room-corridor r7 r6)\n)\n(:goal (and (hero-in-room player r7) (hero-alive player)))\n)\n",
        "problem2.pddl": "(define (problem pb1) (:domain dungeon)\n(:objects\n    player - hero\n    m0 m1 m2 - monster\n    t0 t1 t2 t3 t4 - trap\n    s0 s1 - sword\n    r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 - room\n)\n\n(:init\n    (hero-alive player)\n    (hero-in-room player r0)\n    (hero-empty-handed player)\n    \n    (monster-in-room m0 r3)\n    (not (monster-afraid player m0))\n    (monster-in-room m1 r5)\n    (not (monster-afraid player m1))\n    (monster-in-room m2 r8)\n    (not (monster-afraid player m2))\n\n    (trap-in-room t0 r2)\n    (trap-armed t0 r2)\n    (not (trap-disarmed t0 r2))\n    (trap-in-room t0 r4)\n    (trap-armed t0 r4)\n    (not (trap-disarmed t0 r4))\n    (trap-in-room t0 r7)\n    (trap-armed t0 r7)\n    (not (trap-disarmed t0 r7))\n    (trap-in-room t0 r9)\n    (trap-armed t0 r9)\n    (not (trap-disarmed t0 r9))\n    (trap-in-room t0 r10)\n    (trap-armed t0 r10)\n    (not (trap-disarmed t0 r10))\n\n    (sword-in-room s0 r1)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n    (sword-in-room s0 r6)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n\n    (not (room-destroyed r0))\n    (not (room-destroyed r1))\n    (not (room-destroyed r2))\n    (not (room-destroyed r3))\n    (not (room-destroyed r4))\n    (not (room-destroyed r5))\n    (not (room-destroyed r6))\n    (not (room-destroyed r7))\n    (not (room-destroyed r8))\n    (not (room-destroyed r9))\n    (not (room-destroyed r10))\n    (not (room-destroyed r11))\n\n    (room-cleared player r0)\n    (not (room-cleared player r1))\n    (not (room-cleared player r2))\n    (not (room-cleared player r3))\n    (not (room-cleared player r4))\n    (not (room-cleared player r5))\n    (not (room-cleared player r6))\n    (not (room-cleared player r7))\n    (not (room-cleared player r8))\n    (not (room-cleared player r9))\n    (not (room-cleared player r10))\n    (not (room-cleared player r11))\n\n    (room-corridor r0 r1)\n    (room-corridor r0 r2)\n    (room-corridor r1 r0)\n    (room-corridor r1 r3)\n    (room-corridor r1 r4)\n    (room-corridor r2 r0)\n    (room-corridor r2 r3)\n    (room-corridor r2 r4)\n    (room-corridor r3 r1)\n    (room-corridor r3 r2)\n    (room-corridor r3 r5)\n    (room-corridor r3 r6)\n    (room-corridor r4 r1)\n    (room-corridor r4 r2)\n    (room-corridor r4 r5)\n    (room-corridor r4 r6)\n    (room-corridor r5 r3)\n    (room-corridor r5 r4)\n    (room-corridor r5 r8)\n    (room-corridor r5 r7)\n    (room-corridor r6 r3)\n    (room-corridor r6 r4)\n    (room-corridor r6 r8)\n    (room-corridor r6 r7)\n    (room-corridor r7 r5)\n    (room-corridor r7 r6)\n    (room-corridor r7 r9)\n    (room-corridor r7 r10)\n    (room-corridor r8 r5)\n    (room-corridor r8 r6)\n    (room-corridor r8 r9)\n    (room-corridor r8 r10)\n    (room-corridor r9 r7)\n    (room-corridor r9 r8)\n    (room-corridor r9 r11)\n    (room-corridor r10 r7)\n    (room-corridor r10 r8)\n    (room-corridor r10 r11)\n)\n(:goal (and (hero-in-room player r11) (hero-alive player)))\n)\n",
        "problem3.pddl": "(define (problem pb1) (:domain dungeon)\n(:objects\n    player - hero\n    m0 m1 m2 m3 m4 m5 m6 - monster\n    t0 t1 t2 t3 t4 t5 - trap\n    s0 s1 s2 s3 - sword\n    r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 - room\n)\n\n(:init\n    (hero-alive player)\n    (hero-in-room player r0)\n    (hero-empty-handed player)\n    \n    (monster-in-room m0 r2)\n    (not (monster-afraid player m0))\n    (monster-in-room m1 r2)\n    (not (monster-afraid player m1))\n    (monster-in-room m2 r9)\n    (not (monster-afraid player m2))\n    (monster-in-room m3 r10)\n    (not (monster-afraid player m3))\n    (monster-in-room m4 r12)\n    (not (monster-afraid player m4))\n    (monster-in-room m5 r14)\n    (not (monster-afraid player m5))\n    (monster-in-room m6 r15)\n    (not (monster-afraid player m6))\n\n    (trap-in-room t0 r3)\n    (trap-armed t0 r3)\n    (not (trap-disarmed t0 r3))\n    (trap-in-room t1 r7)\n    (trap-armed t1 r7)\n    (not (trap-disarmed t1 r7))\n    (trap-in-room t2 r8)\n    (trap-armed t2 r8)\n    (not (trap-disarmed t2 r8))\n    (trap-in-room t3 r13)\n    (trap-armed t3 r13)\n    (not (trap-disarmed t3 r13))\n    (trap-in-room t4 r17)\n    (trap-armed t4 r17)\n    (not (trap-disarmed t4 r17))\n    (trap-in-room t5 r18)\n    (trap-armed t5 r18)\n    (not (trap-disarmed t5 r18))\n\n    (sword-in-room s0 r5)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n    (sword-in-room s0 r6)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n    (sword-in-room s0 r11)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n    (sword-in-room s0 r16)\n    (not (sword-destroyed s0))\n    (not (sword-holding player s0))\n\n    (not (room-destroyed r0))\n    (not (room-destroyed r1))\n    (not (room-destroyed r2))\n    (not (room-destroyed r3))\n    (not (room-destroyed r4))\n    (not (room-destroyed r5))\n    (not (room-destroyed r6))\n    (not (room-destroyed r7))\n    (not (room-destroyed r8))\n    (not (room-destroyed r9))\n    (not (room-destroyed r10))\n    (not (room-destroyed r11))\n    (not (room-destroyed r12))\n    (not (room-destroyed r13))\n    (not (room-destroyed r14))\n    (not (room-destroyed r15))\n    (not (room-destroyed r16))\n    (not (room-destroyed r17))\n    (not (room-destroyed r18))\n    (not (room-destroyed r19))\n\n    (room-cleared player r0)\n    (room-cleared player r1)\n\n    (room-corridor r0 r1)\n    (room-corridor r0 r2)\n    (room-corridor r1 r0)\n    (room-corridor r1 r3)\n    (room-corridor r1 r4)\n    (room-corridor r2 r0)\n    (room-corridor r2 r4)\n    (room-corridor r2 r5)\n    (room-corridor r3 r1)\n    (room-corridor r3 r6)\n    (room-corridor r3 r7)\n    (room-corridor r4 r1)\n    (room-corridor r4 r6)\n    (room-corridor r4 r7)\n    (room-corridor r4 r8)\n    (room-corridor r5 r2)\n    (room-corridor r5 r9)\n    (room-corridor r5 r8)\n    (room-corridor r6 r3)\n    (room-corridor r6 r10)\n    (room-corridor r7 r3)\n    (room-corridor r7 r4)\n    (room-corridor r7 r10)\n    (room-corridor r7 r11)\n    (room-corridor r8 r4)\n    (room-corridor r8 r5)\n    (room-corridor r8 r11)\n    (room-corridor r8 r12)\n    (room-corridor r9 r5)\n    (room-corridor r9 r13)\n    (room-corridor r9 r12)\n    (room-corridor r10 r6)\n    (room-corridor r10 r7)\n    (room-corridor r10 r14)\n    (room-corridor r11 r7)\n    (room-corridor r11 r8)\n    (room-corridor r11 r14)\n    (room-corridor r11 r15)\n    (room-corridor r12 r9)\n    (room-corridor r12 r8)\n    (room-corridor r12 r16)\n    (room-corridor r12 r15)\n    (room-corridor r13 r9)\n    (room-corridor r13 r16)\n    (room-corridor r14 r10)\n    (room-corridor r14 r11)\n    (room-corridor r14 r17)\n    (room-corridor r15 r12)\n    (room-corridor r15 r11)\n    (room-corridor r15 r17)\n    (room-corridor r15 r18)\n    (room-corridor r16 r12)\n    (room-corridor r16 r13)\n    (room-corridor r16 r18)\n    (room-corridor r17 r14)\n    (room-corridor r17 r15)\n    (room-corridor r17 r19)\n    (room-corridor r18 r16)\n    (room-corridor r18 r15)\n    (room-corridor r18 r19)\n    (room-corridor r19 r18)\n    (room-corridor r19 r17)\n\n)\n(:goal (and (hero-in-room player r19) (hero-alive player)))\n)\n"
    },
    "plugins": {}
}