# Requirements
    - docker (to run the planners in the Lightweight Automated Planning ToolKiT)
    - python3 (optional, to run the planning.domains solver script). See requirements.txt for dependencies.
    - all code was developed and tested on MacOS but should equally work on all major commercial operating systems
    - diff, vim + vimdiff plugin for diffing the planners output across directories (optional)
    - bash
    
# Running planners

# Create a virtualenv and install the dependencies (to be done only once)
python3.7 -m virtualenv ~/.virtualenv/planning
 ~/.virtualenv/planning/bin/activate.sh (depending on the shell used this might differ)
pip install -r requirements.txt # the only external library is requests

## Run the planning.domains planner
./scripts/run.py src/dungeon-domain.pddl src/problem1.pddl | python -m json.tool -

## Run the LAPTK planners 
docker pull lapkt/lapkt-public # to run only once to download the docker image
docker run -v /path/to/this/directory:/dungeon -it lapkt/lapkt-public
cp /dungeon/run_local_planners.sh .
./run_local_planners.sh 

# Compare planners output

diff -r -u planner_output_directory_1 planner_output_directory_2 | vim -R -

This command will require having vim and the vimdiff plugin installed. Dropping the pipe and everything
after it will still allow seeing the difference between the directories but the output will be less readable.

# Files
    - src contain all the source code for the assignment
    - output contain the output from the planning engines used
    - scripts contain some scripts used to run the planning engines
    - README this file
    - report.pdf the assignment report, generated using XeLaTex and written on overleaf.com

# Contacts

Marco Dinacci
u1972408@unimail.hud.ac.uk
